@import "adam-font";
@import "../variables/colors";
@import "../variables/dimens";
@import "../variables/font-families";
@import "../mixins/typography";

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

$baseline: strip-unit($base-line-height);

/**
 * Settings
 */
$link-underlined:       true !default;
$link-underlined-hover: false !default;

.small-font-size {
  @include typography-font-size($small-font-size);
}

.tiny-font-size {
  @include typography-font-size($tiny-font-size);
}

h1, h2, h3, h4, h5, h6,
p {
  margin-top: 0;
  margin-bottom: $base-line-height * 0.5;
  padding: 0;
}

html {
    font-size: $base-font-size;
    line-height: $base-line-height;
    font-family: $base-font-family;
    color: $font-color;
}

body {
  overflow-wrap: break-word;
}

h1, h2, h3, h4, h5, h6 {
  font-family: $title-font-family;
  font-weight: normal;
  //color: $title-color;
}

h1 {
    @include typography-font-size($font-size-h1);
}

h2 {
    @include typography-font-size($font-size-h2);
}

h3 {
    @include typography-font-size($font-size-h3);
}

h4 {
    @include typography-font-size($font-size-h4);
}

h5 {
    @include typography-font-size($font-size-h5);
}

h6 {
    @include typography-font-size($font-size-h6);
}

p {
  word-wrap: break-word;
}

a {
    @if ($link-underlined == false) {
        text-decoration: none;
    }

    &:hover {
        @if ($link-underlined-hover == false) {
            text-decoration: none;
        }

        @if ($link-underlined-hover == true) {
            text-decoration: underline;
        }

    }

}

code, pre {
  font-family: $code-font-family;
  @include typography-font-size($font-size-code);
  margin: 0;
  margin-bottom: $base-line-height;
  padding: $base-line-height;
  word-wrap: initial;
}

pre code {
  margin: -$base-line-height;
}

p code {
  padding: 0 4px;
  @include typography-font-size($base-font-size);
}

blockquote {
  margin: 0;
  padding: (0.5 * $base-line-height);
  font-family: inherit;
}

blockquote::before, blockquote::after {
  @include typography-font-size($base-font-size * 3);
  //color: $blockquote-mark-color;
}

blockquote::before {
  line-height: 1;
}

blockquote::after {
  line-height: 0;
}

ul, ol {
  margin: 0;
  margin-bottom: $base-line-height;
  padding-left: 1 * $base-line-height;
}

li > ul, li > ol {
  margin: ($base-line-height / 2) 0;
}

input[type='text'], input[type='textarea'], textarea {
  margin: 0;
  margin-bottom: $base-line-height;
  padding: ($base-line-height / 2);

  @include typography-font-size($base-font-size);
  color: inherit;
}

label {
  @include typography-font-size($base-font-size);
  color: inherit;
}

$btn-height: $base-line-height * 2;
$btn-padding: ($base-line-height / 2);
$btn-internal-size: $btn-height - ($btn-padding * 2);

button, .btn, input[type="button"], input[type="reset"], input[type="submit"] {
  padding: $btn-padding;
  //color: $btn-text-color;
  font-size: 1rem;
  font-weight: 300;
  line-height: $btn-internal-size;
  vertical-align: top;
  text-decoration: none;

  img, svg {
    display: block;

    width: $btn-internal-size;
    height: $btn-internal-size;
  }

  &:hover {
    text-decoration: none;
  }
}

iframe {
  width: $base-line-height * 8;
  height: $base-line-height * 8;
  max-width: 100%;

  margin-bottom: $base-line-height;
}

.embed {
  margin-bottom: $base-line-height;
}

@media (min-width: $break-xsmall) {
  h1, h2, h3, h4, h5, h6,
  p {
    margin-bottom: $base-line-height;
  }
}

@media (min-width: $break-small) {

}
